// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_pmtd_msgs/pmtd_common_msgs.proto

#ifndef PROTOBUF_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PmtdMsg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
void protobuf_AssignDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
void protobuf_ShutdownFile_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();

class DeviceStatusMsg;
class Header;
class PmtdCommonMsg;
class PmtdDeviceStatusMsgs;

enum PmtdDeviceTypeE {
  Pmtd = 0,
  CsiCamera = 1,
  Livox = 2,
  Imu = 3,
  FileMannager = 4,
  ThirdPartyDevice1 = 5,
  ThirdPartyDevice2 = 6,
  ThirdPartyDevice3 = 7,
  PmtdDeviceTypeE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PmtdDeviceTypeE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PmtdDeviceTypeE_IsValid(int value);
const PmtdDeviceTypeE PmtdDeviceTypeE_MIN = Pmtd;
const PmtdDeviceTypeE PmtdDeviceTypeE_MAX = ThirdPartyDevice3;
const int PmtdDeviceTypeE_ARRAYSIZE = PmtdDeviceTypeE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PmtdDeviceTypeE_descriptor();
inline const ::std::string& PmtdDeviceTypeE_Name(PmtdDeviceTypeE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PmtdDeviceTypeE_descriptor(), value);
}
inline bool PmtdDeviceTypeE_Parse(
    const ::std::string& name, PmtdDeviceTypeE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PmtdDeviceTypeE>(
    PmtdDeviceTypeE_descriptor(), name, value);
}
enum PmtdStatusTypeE {
  DEVICE_OK = 0,
  DEVICE_STOP = 1,
  DEVICE_START = 2,
  DEVICE_WARN = 3,
  DEVICE_ERROR = 4,
  PmtdStatusTypeE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PmtdStatusTypeE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PmtdStatusTypeE_IsValid(int value);
const PmtdStatusTypeE PmtdStatusTypeE_MIN = DEVICE_OK;
const PmtdStatusTypeE PmtdStatusTypeE_MAX = DEVICE_ERROR;
const int PmtdStatusTypeE_ARRAYSIZE = PmtdStatusTypeE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PmtdStatusTypeE_descriptor();
inline const ::std::string& PmtdStatusTypeE_Name(PmtdStatusTypeE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PmtdStatusTypeE_descriptor(), value);
}
inline bool PmtdStatusTypeE_Parse(
    const ::std::string& name, PmtdStatusTypeE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PmtdStatusTypeE>(
    PmtdStatusTypeE_descriptor(), name, value);
}
// ===================================================================

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PmtdMsg.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  void Swap(Header* other);

  // implements Message ----------------------------------------------

  inline Header* New() const { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 device_number = 1;
  void clear_device_number();
  static const int kDeviceNumberFieldNumber = 1;
  ::google::protobuf::int32 device_number() const;
  void set_device_number(::google::protobuf::int32 value);

  // optional double timestamp_sec = 2;
  void clear_timestamp_sec();
  static const int kTimestampSecFieldNumber = 2;
  double timestamp_sec() const;
  void set_timestamp_sec(double value);

  // optional int32 message_type = 3;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 3;
  ::google::protobuf::int32 message_type() const;
  void set_message_type(::google::protobuf::int32 value);

  // optional string verify_code = 4;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 4;
  const ::std::string& verify_code() const;
  void set_verify_code(const ::std::string& value);
  void set_verify_code(const char* value);
  void set_verify_code(const char* value, size_t size);
  ::std::string* mutable_verify_code();
  ::std::string* release_verify_code();
  void set_allocated_verify_code(::std::string* verify_code);

  // @@protoc_insertion_point(class_scope:PmtdMsg.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double timestamp_sec_;
  ::google::protobuf::int32 device_number_;
  ::google::protobuf::int32 message_type_;
  ::google::protobuf::internal::ArenaStringPtr verify_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_AssignDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_ShutdownFile_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();

  void InitAsDefaultInstance();
  static Header* default_instance_;
};
// -------------------------------------------------------------------

class PmtdCommonMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PmtdMsg.PmtdCommonMsg) */ {
 public:
  PmtdCommonMsg();
  virtual ~PmtdCommonMsg();

  PmtdCommonMsg(const PmtdCommonMsg& from);

  inline PmtdCommonMsg& operator=(const PmtdCommonMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PmtdCommonMsg& default_instance();

  void Swap(PmtdCommonMsg* other);

  // implements Message ----------------------------------------------

  inline PmtdCommonMsg* New() const { return New(NULL); }

  PmtdCommonMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PmtdCommonMsg& from);
  void MergeFrom(const PmtdCommonMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PmtdCommonMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PmtdMsg.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::PmtdMsg::Header& header() const;
  ::PmtdMsg::Header* mutable_header();
  ::PmtdMsg::Header* release_header();
  void set_allocated_header(::PmtdMsg::Header* header);

  // optional int32 command_type = 2;
  void clear_command_type();
  static const int kCommandTypeFieldNumber = 2;
  ::google::protobuf::int32 command_type() const;
  void set_command_type(::google::protobuf::int32 value);

  // optional bytes body = 3;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:PmtdMsg.PmtdCommonMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::PmtdMsg::Header* header_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::int32 command_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_AssignDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_ShutdownFile_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();

  void InitAsDefaultInstance();
  static PmtdCommonMsg* default_instance_;
};
// -------------------------------------------------------------------

class DeviceStatusMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PmtdMsg.DeviceStatusMsg) */ {
 public:
  DeviceStatusMsg();
  virtual ~DeviceStatusMsg();

  DeviceStatusMsg(const DeviceStatusMsg& from);

  inline DeviceStatusMsg& operator=(const DeviceStatusMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceStatusMsg& default_instance();

  void Swap(DeviceStatusMsg* other);

  // implements Message ----------------------------------------------

  inline DeviceStatusMsg* New() const { return New(NULL); }

  DeviceStatusMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceStatusMsg& from);
  void MergeFrom(const DeviceStatusMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeviceStatusMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PmtdMsg.PmtdDeviceTypeE device_type = 1;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 1;
  ::PmtdMsg::PmtdDeviceTypeE device_type() const;
  void set_device_type(::PmtdMsg::PmtdDeviceTypeE value);

  // optional .PmtdMsg.PmtdStatusTypeE device_status = 2;
  void clear_device_status();
  static const int kDeviceStatusFieldNumber = 2;
  ::PmtdMsg::PmtdStatusTypeE device_status() const;
  void set_device_status(::PmtdMsg::PmtdStatusTypeE value);

  // optional int32 device_error_code = 3;
  void clear_device_error_code();
  static const int kDeviceErrorCodeFieldNumber = 3;
  ::google::protobuf::int32 device_error_code() const;
  void set_device_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PmtdMsg.DeviceStatusMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int device_type_;
  int device_status_;
  ::google::protobuf::int32 device_error_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_AssignDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_ShutdownFile_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();

  void InitAsDefaultInstance();
  static DeviceStatusMsg* default_instance_;
};
// -------------------------------------------------------------------

class PmtdDeviceStatusMsgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PmtdMsg.PmtdDeviceStatusMsgs) */ {
 public:
  PmtdDeviceStatusMsgs();
  virtual ~PmtdDeviceStatusMsgs();

  PmtdDeviceStatusMsgs(const PmtdDeviceStatusMsgs& from);

  inline PmtdDeviceStatusMsgs& operator=(const PmtdDeviceStatusMsgs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PmtdDeviceStatusMsgs& default_instance();

  void Swap(PmtdDeviceStatusMsgs* other);

  // implements Message ----------------------------------------------

  inline PmtdDeviceStatusMsgs* New() const { return New(NULL); }

  PmtdDeviceStatusMsgs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PmtdDeviceStatusMsgs& from);
  void MergeFrom(const PmtdDeviceStatusMsgs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PmtdDeviceStatusMsgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PmtdMsg.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::PmtdMsg::Header& header() const;
  ::PmtdMsg::Header* mutable_header();
  ::PmtdMsg::Header* release_header();
  void set_allocated_header(::PmtdMsg::Header* header);

  // repeated .PmtdMsg.DeviceStatusMsg status_msgs = 2;
  int status_msgs_size() const;
  void clear_status_msgs();
  static const int kStatusMsgsFieldNumber = 2;
  const ::PmtdMsg::DeviceStatusMsg& status_msgs(int index) const;
  ::PmtdMsg::DeviceStatusMsg* mutable_status_msgs(int index);
  ::PmtdMsg::DeviceStatusMsg* add_status_msgs();
  ::google::protobuf::RepeatedPtrField< ::PmtdMsg::DeviceStatusMsg >*
      mutable_status_msgs();
  const ::google::protobuf::RepeatedPtrField< ::PmtdMsg::DeviceStatusMsg >&
      status_msgs() const;

  // @@protoc_insertion_point(class_scope:PmtdMsg.PmtdDeviceStatusMsgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::PmtdMsg::Header* header_;
  ::google::protobuf::RepeatedPtrField< ::PmtdMsg::DeviceStatusMsg > status_msgs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_AssignDesc_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();
  friend void protobuf_ShutdownFile_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto();

  void InitAsDefaultInstance();
  static PmtdDeviceStatusMsgs* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Header

// optional int32 device_number = 1;
inline void Header::clear_device_number() {
  device_number_ = 0;
}
inline ::google::protobuf::int32 Header::device_number() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.Header.device_number)
  return device_number_;
}
inline void Header::set_device_number(::google::protobuf::int32 value) {
  
  device_number_ = value;
  // @@protoc_insertion_point(field_set:PmtdMsg.Header.device_number)
}

// optional double timestamp_sec = 2;
inline void Header::clear_timestamp_sec() {
  timestamp_sec_ = 0;
}
inline double Header::timestamp_sec() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.Header.timestamp_sec)
  return timestamp_sec_;
}
inline void Header::set_timestamp_sec(double value) {
  
  timestamp_sec_ = value;
  // @@protoc_insertion_point(field_set:PmtdMsg.Header.timestamp_sec)
}

// optional int32 message_type = 3;
inline void Header::clear_message_type() {
  message_type_ = 0;
}
inline ::google::protobuf::int32 Header::message_type() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.Header.message_type)
  return message_type_;
}
inline void Header::set_message_type(::google::protobuf::int32 value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:PmtdMsg.Header.message_type)
}

// optional string verify_code = 4;
inline void Header::clear_verify_code() {
  verify_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::verify_code() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.Header.verify_code)
  return verify_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_verify_code(const ::std::string& value) {
  
  verify_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PmtdMsg.Header.verify_code)
}
inline void Header::set_verify_code(const char* value) {
  
  verify_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PmtdMsg.Header.verify_code)
}
inline void Header::set_verify_code(const char* value, size_t size) {
  
  verify_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PmtdMsg.Header.verify_code)
}
inline ::std::string* Header::mutable_verify_code() {
  
  // @@protoc_insertion_point(field_mutable:PmtdMsg.Header.verify_code)
  return verify_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_verify_code() {
  // @@protoc_insertion_point(field_release:PmtdMsg.Header.verify_code)
  
  return verify_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_verify_code(::std::string* verify_code) {
  if (verify_code != NULL) {
    
  } else {
    
  }
  verify_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verify_code);
  // @@protoc_insertion_point(field_set_allocated:PmtdMsg.Header.verify_code)
}

// -------------------------------------------------------------------

// PmtdCommonMsg

// optional .PmtdMsg.Header header = 1;
inline bool PmtdCommonMsg::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void PmtdCommonMsg::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::PmtdMsg::Header& PmtdCommonMsg::header() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.PmtdCommonMsg.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::PmtdMsg::Header* PmtdCommonMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::PmtdMsg::Header;
  }
  // @@protoc_insertion_point(field_mutable:PmtdMsg.PmtdCommonMsg.header)
  return header_;
}
inline ::PmtdMsg::Header* PmtdCommonMsg::release_header() {
  // @@protoc_insertion_point(field_release:PmtdMsg.PmtdCommonMsg.header)
  
  ::PmtdMsg::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void PmtdCommonMsg::set_allocated_header(::PmtdMsg::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PmtdMsg.PmtdCommonMsg.header)
}

// optional int32 command_type = 2;
inline void PmtdCommonMsg::clear_command_type() {
  command_type_ = 0;
}
inline ::google::protobuf::int32 PmtdCommonMsg::command_type() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.PmtdCommonMsg.command_type)
  return command_type_;
}
inline void PmtdCommonMsg::set_command_type(::google::protobuf::int32 value) {
  
  command_type_ = value;
  // @@protoc_insertion_point(field_set:PmtdMsg.PmtdCommonMsg.command_type)
}

// optional bytes body = 3;
inline void PmtdCommonMsg::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PmtdCommonMsg::body() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.PmtdCommonMsg.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PmtdCommonMsg::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PmtdMsg.PmtdCommonMsg.body)
}
inline void PmtdCommonMsg::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PmtdMsg.PmtdCommonMsg.body)
}
inline void PmtdCommonMsg::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PmtdMsg.PmtdCommonMsg.body)
}
inline ::std::string* PmtdCommonMsg::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:PmtdMsg.PmtdCommonMsg.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PmtdCommonMsg::release_body() {
  // @@protoc_insertion_point(field_release:PmtdMsg.PmtdCommonMsg.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PmtdCommonMsg::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:PmtdMsg.PmtdCommonMsg.body)
}

// -------------------------------------------------------------------

// DeviceStatusMsg

// optional .PmtdMsg.PmtdDeviceTypeE device_type = 1;
inline void DeviceStatusMsg::clear_device_type() {
  device_type_ = 0;
}
inline ::PmtdMsg::PmtdDeviceTypeE DeviceStatusMsg::device_type() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.DeviceStatusMsg.device_type)
  return static_cast< ::PmtdMsg::PmtdDeviceTypeE >(device_type_);
}
inline void DeviceStatusMsg::set_device_type(::PmtdMsg::PmtdDeviceTypeE value) {
  
  device_type_ = value;
  // @@protoc_insertion_point(field_set:PmtdMsg.DeviceStatusMsg.device_type)
}

// optional .PmtdMsg.PmtdStatusTypeE device_status = 2;
inline void DeviceStatusMsg::clear_device_status() {
  device_status_ = 0;
}
inline ::PmtdMsg::PmtdStatusTypeE DeviceStatusMsg::device_status() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.DeviceStatusMsg.device_status)
  return static_cast< ::PmtdMsg::PmtdStatusTypeE >(device_status_);
}
inline void DeviceStatusMsg::set_device_status(::PmtdMsg::PmtdStatusTypeE value) {
  
  device_status_ = value;
  // @@protoc_insertion_point(field_set:PmtdMsg.DeviceStatusMsg.device_status)
}

// optional int32 device_error_code = 3;
inline void DeviceStatusMsg::clear_device_error_code() {
  device_error_code_ = 0;
}
inline ::google::protobuf::int32 DeviceStatusMsg::device_error_code() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.DeviceStatusMsg.device_error_code)
  return device_error_code_;
}
inline void DeviceStatusMsg::set_device_error_code(::google::protobuf::int32 value) {
  
  device_error_code_ = value;
  // @@protoc_insertion_point(field_set:PmtdMsg.DeviceStatusMsg.device_error_code)
}

// -------------------------------------------------------------------

// PmtdDeviceStatusMsgs

// optional .PmtdMsg.Header header = 1;
inline bool PmtdDeviceStatusMsgs::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void PmtdDeviceStatusMsgs::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::PmtdMsg::Header& PmtdDeviceStatusMsgs::header() const {
  // @@protoc_insertion_point(field_get:PmtdMsg.PmtdDeviceStatusMsgs.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::PmtdMsg::Header* PmtdDeviceStatusMsgs::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::PmtdMsg::Header;
  }
  // @@protoc_insertion_point(field_mutable:PmtdMsg.PmtdDeviceStatusMsgs.header)
  return header_;
}
inline ::PmtdMsg::Header* PmtdDeviceStatusMsgs::release_header() {
  // @@protoc_insertion_point(field_release:PmtdMsg.PmtdDeviceStatusMsgs.header)
  
  ::PmtdMsg::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void PmtdDeviceStatusMsgs::set_allocated_header(::PmtdMsg::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PmtdMsg.PmtdDeviceStatusMsgs.header)
}

// repeated .PmtdMsg.DeviceStatusMsg status_msgs = 2;
inline int PmtdDeviceStatusMsgs::status_msgs_size() const {
  return status_msgs_.size();
}
inline void PmtdDeviceStatusMsgs::clear_status_msgs() {
  status_msgs_.Clear();
}
inline const ::PmtdMsg::DeviceStatusMsg& PmtdDeviceStatusMsgs::status_msgs(int index) const {
  // @@protoc_insertion_point(field_get:PmtdMsg.PmtdDeviceStatusMsgs.status_msgs)
  return status_msgs_.Get(index);
}
inline ::PmtdMsg::DeviceStatusMsg* PmtdDeviceStatusMsgs::mutable_status_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:PmtdMsg.PmtdDeviceStatusMsgs.status_msgs)
  return status_msgs_.Mutable(index);
}
inline ::PmtdMsg::DeviceStatusMsg* PmtdDeviceStatusMsgs::add_status_msgs() {
  // @@protoc_insertion_point(field_add:PmtdMsg.PmtdDeviceStatusMsgs.status_msgs)
  return status_msgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PmtdMsg::DeviceStatusMsg >*
PmtdDeviceStatusMsgs::mutable_status_msgs() {
  // @@protoc_insertion_point(field_mutable_list:PmtdMsg.PmtdDeviceStatusMsgs.status_msgs)
  return &status_msgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PmtdMsg::DeviceStatusMsg >&
PmtdDeviceStatusMsgs::status_msgs() const {
  // @@protoc_insertion_point(field_list:PmtdMsg.PmtdDeviceStatusMsgs.status_msgs)
  return status_msgs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PmtdMsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PmtdMsg::PmtdDeviceTypeE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PmtdMsg::PmtdDeviceTypeE>() {
  return ::PmtdMsg::PmtdDeviceTypeE_descriptor();
}
template <> struct is_proto_enum< ::PmtdMsg::PmtdStatusTypeE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PmtdMsg::PmtdStatusTypeE>() {
  return ::PmtdMsg::PmtdStatusTypeE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_5fpmtd_5fmsgs_2fpmtd_5fcommon_5fmsgs_2eproto__INCLUDED
